webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! swr */ \"./node_modules/swr/esm/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @material-ui/core/Button */ \"./node_modules/@material-ui/core/esm/Button/index.js\");\n/* harmony import */ var _material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @material-ui/core/Snackbar */ \"./node_modules/@material-ui/core/esm/Snackbar/index.js\");\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\n\n\nvar selectCategory = function selectCategory(jackets, shirts, accessories, category) {\n  if (category == 'jackets') return jackets;\n  if (category == 'shirts') return shirts;\n  if (category == 'accessories') return accessories;else return null;\n};\n\nvar Alphabet = function Alphabet(props) {\n  var handeClick = function handeClick(val) {\n    props.setLetter(val);\n  };\n\n  var selected = selectCategory(props.jackets, props.shirts, props.accessories, props.category);\n\n  if (selected) {\n    return lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(Object.keys(selected), function (_char) {\n      return __jsx(\"li\", {\n        key: _char,\n        onClick: function onClick() {\n          return handeClick(_char);\n        },\n        className: \"jsx-3188457135\" + \" \" + 'alpha',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n        variant: _char == props.letter ? 'outlined' : 'text',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 77\n        }\n      }, _char), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n        id: \"3188457135\",\n        __self: _this\n      }, \".alpha.jsx-3188457135{display:inline;cursor:pointer;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n    });\n  } else return null;\n};\n\n_c = Alphabet;\n\nvar FilterCategory = function FilterCategory(props) {\n  var handleClick = function handleClick(val) {\n    props.setCategory(val);\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    variant: 'jackets' == props.category ? 'outlined' : 'text',\n    onClick: function onClick() {\n      return handleClick('jackets');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"jackets\"), __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    variant: 'shirts' == props.category ? 'outlined' : 'text',\n    onClick: function onClick() {\n      return handleClick('shirts');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \"shirts\"), __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n    variant: 'accessories' == props.category ? 'outlined' : 'text',\n    onClick: function onClick() {\n      return handleClick('accessories');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"accessories\"));\n};\n\n_c2 = FilterCategory;\n\nvar ListOfProducts = function ListOfProducts(_ref) {\n  var data = _ref.data,\n      letter = _ref.letter,\n      setActiveId = _ref.setActiveId,\n      activeId = _ref.activeId,\n      manufacturers = _ref.manufacturers;\n\n  var list = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(data[letter].children, function (val) {\n    var handleClick = function handleClick(val) {\n      activeId == val.id ? setActiveId(null) : setActiveId(val.id);\n    };\n\n    return __jsx(\"div\", {\n      key: val.id,\n      onClick: function onClick() {\n        return handleClick(val);\n      },\n      className: \"jsx-3548512909\" + \" \" + ((activeId == val.id ? 'list-element-active' : 'list-element') || \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, __jsx(_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 128\n      }\n    }, val.name), __jsx(\"div\", {\n      className: \"jsx-3548512909\" + \" \" + ((activeId == val.id ? 'info-active' : 'info') || \"\"),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, __jsx(\"ul\", {\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(\"li\", {\n      key: val.id + 1,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, \"id: \", val.id), __jsx(\"li\", {\n      key: val.id + 2,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"type: \", val.type), __jsx(\"li\", {\n      key: val.id + 3,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"price: \", val.price), __jsx(\"li\", {\n      key: val.id + 4,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, \"manufacturer: \", val.manufacturer), __jsx(\"li\", {\n      key: val.id + 5,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"availability: \", !manufacturers[val.manufacturer] ? 'loading' : manufacturers[val.manufacturer][val.id.toUpperCase()]), __jsx(\"li\", {\n      key: val.id + 6,\n      className: \"jsx-3548512909\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"colors: \", lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(val.color, function (color) {\n      return __jsx(\"span\", {\n        key: val.id + color,\n        className: \"jsx-3548512909\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 65\n        }\n      }, color, \" \");\n    }), \" \"))), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n      id: \"3548512909\",\n      __self: _this\n    }, \".list-element.jsx-3548512909{cursor:pointer;}.list-element-active.jsx-3548512909{cursor:pointer;}.info.jsx-3548512909{display:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n  });\n\n  return __jsx(\"ul\", {\n    className: \"jsx-763154920\" + \" \" + \"list-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, list, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"763154920\",\n    __self: _this\n  }, \".list-container.jsx-763154920{-webkit-columns:5;columns:5;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n};\n\n_c3 = ListOfProducts;\nfunction Home() {\n  _s();\n\n  var _this2 = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('A'),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      jackets = _useState2[0],\n      setJackets = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      shirts = _useState3[0],\n      setShirts = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      accessories = _useState4[0],\n      setAccessories = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('jackets'),\n      category = _useState5[0],\n      setCategory = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      activeId = _useState6[0],\n      setActiveId = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      pending = _useState7[0],\n      setPending = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({}),\n      manufacturers = _useState8[0],\n      setManufacturers = _useState8[1];\n\n  var _useState9 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(false),\n      error = _useState9[0],\n      setError = _useState9[1]; // function passed on to useSWR\n\n\n  var fetcher = function fetcher() {\n    return fetch.apply(void 0, arguments).then(function (res) {\n      return res.json();\n    });\n  };\n\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!jackets ? ['https://bad-api-assignment.reaktor.com/products/jackets', 'x-force-error-mode: all'] : null, fetcher, {\n    loadingTimeout: 300\n  }, {\n    onLoadingSlow: function onLoadingSlow(key, config) {\n      console.log(\"loading real slow bro\");\n    }\n  }, {\n    onSuccess: function onSuccess(data, key, config) {\n      console.log(\"wtf\");\n      dataParser(data, setJackets);\n    }\n  }, {\n    onError: function onError(error, key, config) {\n      console.log(\"in here either error\");\n    }\n  });\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!shirts ? 'https://bad-api-assignment.reaktor.com/products/shirts' : null, fetcher, {\n    onSuccess: function onSuccess(data, key, config) {\n      dataParser(data, setShirts);\n    }\n  });\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!accessories ? 'https://bad-api-assignment.reaktor.com/products/accessories' : null, fetcher, {\n    onSuccess: function onSuccess(data, key, config) {\n      var uniqueManufacturers = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.uniq(lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(data, 'manufacturer'));\n\n      setPending(uniqueManufacturers);\n      dataParser(data, setAccessories);\n    }\n  }); // get manufacturers once items are retrieved\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    getManufacturers(pending);\n  }, [pending]); // async function for retrieving availability data in parallel\n\n  var getManufacturers = /*#__PURE__*/function () {\n    var _ref2 = Object(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(x) {\n      var newObj, promises, _iterator, _step, manufacturer, response;\n\n      return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newObj = {};\n              promises = [];\n              _iterator = _createForOfIteratorHelper(x);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  manufacturer = _step.value;\n                  response = fetch(\"https://bad-api-assignment.reaktor.com/availability/\".concat(manufacturer), {\n                    headers: {\n                      \"x-force-error-mode\": \"all\"\n                    }\n                  }).then(function (res) {\n                    return res.json();\n                  });\n                  promises.push({\n                    response: response,\n                    manufacturer: manufacturer\n                  });\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              Promise.all(promises).then( /*#__PURE__*/Object(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n                var _iterator2, _step2, _loop;\n\n                return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _iterator2 = _createForOfIteratorHelper(promises);\n                        _context2.prev = 1;\n                        _loop = /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop() {\n                          var promise;\n                          return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  promise = _step2.value;\n                                  _context.next = 3;\n                                  return promise.response.then(function (data) {\n                                    if (data.response.length == 2) alert(\"somethings wrong bruv\");\n                                    newObj[promise.manufacturer] = dataMap(data.response);\n                                  });\n\n                                case 3:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _loop);\n                        });\n\n                        _iterator2.s();\n\n                      case 4:\n                        if ((_step2 = _iterator2.n()).done) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        return _context2.delegateYield(_loop(), \"t0\", 6);\n\n                      case 6:\n                        _context2.next = 4;\n                        break;\n\n                      case 8:\n                        _context2.next = 13;\n                        break;\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t1 = _context2[\"catch\"](1);\n\n                        _iterator2.e(_context2.t1);\n\n                      case 13:\n                        _context2.prev = 13;\n\n                        _iterator2.f();\n\n                        return _context2.finish(13);\n\n                      case 16:\n                        setManufacturers(newObj);\n\n                      case 17:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10, 13, 16]]);\n              })));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getManufacturers(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // parse datapayload value\n\n\n  var parseDatapayload = function parseDatapayload(string) {\n    if (string) return string.replace(/<\\/?[^>]+(>|$)/g, \"\");else return \"information not available\";\n  }; // maps data into key value pairs\n\n\n  var dataMap = function dataMap(data) {\n    var newObj = {};\n\n    lodash__WEBPACK_IMPORTED_MODULE_6___default.a.forEach(data, function (val) {\n      newObj[val.id] = parseDatapayload(val.DATAPAYLOAD);\n    });\n\n    return newObj;\n  }; // sorts the items into an array of subarrays sorted alphabetically\n\n\n  var dataParser = function dataParser(data, setter) {\n    var sortedData = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.orderBy(data, ['name'], ['asc']);\n\n    var alphabeticalSort = sortedData.reduce(function (r, e) {\n      var group = e.name[0];\n      if (!r[group]) r[group] = {\n        group: group,\n        children: [e]\n      };else r[group].children.push(e);\n      return r;\n    }, {});\n    setter(alphabeticalSort);\n  };\n\n  var ErrorMessage = function ErrorMessage() {\n    return __jsx(_material_ui_core_Snackbar__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n      open: open,\n      autoHideDuration: 6000,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }\n    }, __jsx(Alert, {\n      severity: \"success\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, \"This is a success message!\"));\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1967134092\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 5\n    }\n  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }\n  }, __jsx(\"ul\", {\n    className: \"jsx-1967134092\" + \" \" + 'alphabet',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, __jsx(Alphabet, {\n    letter: letter,\n    category: category,\n    jackets: jackets,\n    shirts: shirts,\n    accessories: accessories,\n    setLetter: setLetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  })), __jsx(FilterCategory, {\n    setCategory: setCategory,\n    category: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })), selectCategory(jackets, shirts, accessories, category) ? __jsx(ListOfProducts, {\n    data: selectCategory(jackets, shirts, accessories, category),\n    letter: letter,\n    setActiveId: setActiveId,\n    activeId: activeId,\n    manufacturers: manufacturers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 65\n    }\n  }) : __jsx(\"div\", {\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 239\n    }\n  }, \"loading\"), __jsx(ErrorMessage, {\n    className: \"jsx-1967134092\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"4213183310\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"3379920139\",\n    __self: this\n  }, \"html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}*{box-sizing:border-box;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n}\n\n_s(Home, \"y1RSyIU+fodlwRxFkh2rIBguqB0=\", false, function () {\n  return [swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"], swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"], swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"]];\n});\n\n_c4 = Home;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Alphabet\");\n$RefreshReg$(_c2, \"FilterCategory\");\n$RefreshReg$(_c3, \"ListOfProducts\");\n$RefreshReg$(_c4, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})