webpackHotUpdate_N_E("pages/index",{

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Home; });\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! styled-jsx/style */ \"./node_modules/styled-jsx/style.js\");\n/* harmony import */ var styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/head */ \"./node_modules/next/dist/next-server/lib/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var swr__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! swr */ \"./node_modules/swr/esm/index.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lodash */ \"./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\nvar _this = undefined,\n    _jsxFileName = \"/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js\",\n    _s = $RefreshSig$();\n\n\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n\n\n\n\n\nvar Alphabet = function Alphabet(props) {\n  var handeClick = function handeClick(val) {\n    props.setLetter(val);\n  };\n\n  var selected = null;\n  if (props.category == 'jackets') selected = props.jackets;\n  if (props.category == 'shirts') selected = props.shirts;\n  if (props.category == 'accessories') selected = props.accessories;\n\n  if (x) {\n    return lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(Object.keys(x), function (_char) {\n      return __jsx(\"li\", {\n        key: _char,\n        onClick: function onClick() {\n          return handeClick(_char);\n        },\n        className: \"jsx-1980286401\" + \" \" + 'alpha',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }\n      }, \" \", _char, __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n        id: \"1980286401\",\n        __self: _this\n      }, \".alpha.jsx-1980286401{display:inline;cursor:pointer;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n    });\n  } else return null;\n};\n\n_c = Alphabet;\nfunction Home() {\n  _s();\n\n  var _this2 = this;\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('A'),\n      letter = _useState[0],\n      setLetter = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      jackets = _useState2[0],\n      setJackets = _useState2[1];\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      shirts = _useState3[0],\n      setShirts = _useState3[1];\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      accessories = _useState4[0],\n      setAccessories = _useState4[1];\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])('jackets'),\n      category = _useState5[0],\n      setCategory = _useState5[1];\n\n  var _useState6 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(null),\n      activeId = _useState6[0],\n      setActiveId = _useState6[1];\n\n  var _useState7 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      pending = _useState7[0],\n      setPending = _useState7[1];\n\n  var _useState8 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({}),\n      manufacturers = _useState8[0],\n      setManufacturers = _useState8[1]; // function passed on to useSWR\n\n\n  var fetcher = function fetcher() {\n    return fetch.apply(void 0, arguments).then(function (res) {\n      return res.json();\n    });\n  };\n\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!jackets ? 'https://bad-api-assignment.reaktor.com/products/jackets' : null, fetcher, {\n    onSuccess: function onSuccess(data, key, config) {\n      dataParser(data, setJackets);\n    }\n  });\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!shirts ? 'https://bad-api-assignment.reaktor.com/products/shirts' : null, fetcher, {\n    onSuccess: function onSuccess(data, key, config) {\n      dataParser(data, setShirts);\n    }\n  });\n  Object(swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(!accessories ? 'https://bad-api-assignment.reaktor.com/products/accessories' : null, fetcher, {\n    onSuccess: function onSuccess(data, key, config) {\n      var uniqueManufacturers = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.uniq(lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(data, 'manufacturer'));\n\n      setPending(uniqueManufacturers);\n      dataParser(data, setAccessories);\n    }\n  }); // get manufacturers once items are retrieved\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    getManufacturers(pending);\n  }, [pending]); // async function for retrieving availability data in parallel\n\n  var getManufacturers = /*#__PURE__*/function () {\n    var _ref = Object(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(x) {\n      var newObj, promises, _iterator, _step, manufacturer, response;\n\n      return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              newObj = {};\n              promises = [];\n              _iterator = _createForOfIteratorHelper(x);\n\n              try {\n                for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                  manufacturer = _step.value;\n                  response = fetch(\"https://bad-api-assignment.reaktor.com/availability/\".concat(manufacturer)).then(function (res) {\n                    return res.json();\n                  });\n                  promises.push({\n                    response: response,\n                    manufacturer: manufacturer\n                  });\n                }\n              } catch (err) {\n                _iterator.e(err);\n              } finally {\n                _iterator.f();\n              }\n\n              Promise.all(promises).then( /*#__PURE__*/Object(_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__[\"default\"])( /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n                var _iterator2, _step2, _loop;\n\n                return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _iterator2 = _createForOfIteratorHelper(promises);\n                        _context2.prev = 1;\n                        _loop = /*#__PURE__*/_Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _loop() {\n                          var promise;\n                          return _Users_aleksioconnor_Documents_projects_reaktor_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _loop$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  promise = _step2.value;\n                                  _context.next = 3;\n                                  return promise.response.then(function (data) {\n                                    newObj[promise.manufacturer] = dataMap(data.response);\n                                  });\n\n                                case 3:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _loop);\n                        });\n\n                        _iterator2.s();\n\n                      case 4:\n                        if ((_step2 = _iterator2.n()).done) {\n                          _context2.next = 8;\n                          break;\n                        }\n\n                        return _context2.delegateYield(_loop(), \"t0\", 6);\n\n                      case 6:\n                        _context2.next = 4;\n                        break;\n\n                      case 8:\n                        _context2.next = 13;\n                        break;\n\n                      case 10:\n                        _context2.prev = 10;\n                        _context2.t1 = _context2[\"catch\"](1);\n\n                        _iterator2.e(_context2.t1);\n\n                      case 13:\n                        _context2.prev = 13;\n\n                        _iterator2.f();\n\n                        return _context2.finish(13);\n\n                      case 16:\n                        setManufacturers(newObj);\n\n                      case 17:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee, null, [[1, 10, 13, 16]]);\n              })));\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getManufacturers(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // parse datapayload value\n\n\n  var parseDatapayload = function parseDatapayload(string) {\n    if (string) return string.replace(/<\\/?[^>]+(>|$)/g, \"\");else return \"information not available\";\n  }; // maps data into key value pairs\n\n\n  var dataMap = function dataMap(data) {\n    var newObj = {};\n\n    lodash__WEBPACK_IMPORTED_MODULE_6___default.a.forEach(data, function (val) {\n      newObj[val.id] = parseDatapayload(val.DATAPAYLOAD);\n    });\n\n    return newObj;\n  }; // sorts the items into an array of subarrays sorted alphabetically\n\n\n  var dataParser = function dataParser(data, setter) {\n    var sortedData = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.orderBy(data, ['name'], ['asc']);\n\n    var alphabeticalSort = sortedData.reduce(function (r, e) {\n      var group = e.name[0];\n      if (!r[group]) r[group] = {\n        group: group,\n        children: [e]\n      };else r[group].children.push(e);\n      return r;\n    }, {});\n    setter(alphabeticalSort);\n  };\n\n  var FilterCategory = function FilterCategory(props) {\n    var handeClick = function handeClick(val) {\n      setCategory(val);\n    };\n\n    return __jsx(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      onClick: function onClick() {\n        return handeClick('jackets');\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, \"jackets\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return handeClick('shirts');\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, \"shirts\"), __jsx(\"button\", {\n      onClick: function onClick() {\n        return handeClick('accessories');\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"accessories\"));\n  };\n\n  var listOfProducts = function listOfProducts(data) {\n    var list = lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(data[letter].children, function (val) {\n      var handleClick = function handleClick(val) {\n        activeId == val.id ? setActiveId(null) : setActiveId(val.id);\n      };\n\n      return __jsx(\"li\", {\n        key: val.id,\n        onClick: function onClick() {\n          return handleClick(val);\n        },\n        className: \"jsx-2353767445\" + \" \" + ((activeId == val.id ? 'list-element-active' : 'list-element') || \"\"),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }\n      }, val.name, __jsx(\"div\", {\n        className: \"jsx-2353767445\" + \" \" + ((activeId == val.id ? 'info-active' : 'info') || \"\"),\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }\n      }, __jsx(\"ul\", {\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, __jsx(\"li\", {\n        key: val.id + 1,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }\n      }, \" id: \", val.id), __jsx(\"li\", {\n        key: val.id + 2,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }\n      }, \" type: \", val.type), __jsx(\"li\", {\n        key: val.id + 3,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }\n      }, \"price: \", val.price), __jsx(\"li\", {\n        key: val.id + 4,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }\n      }, \"manufacturer: \", val.manufacturer), __jsx(\"li\", {\n        key: val.id + 5,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }\n      }, \"availability: \", !manufacturers[val.manufacturer] ? 'loading' : manufacturers[val.manufacturer][val.id.toUpperCase()]), __jsx(\"li\", {\n        key: val.id + 6,\n        className: \"jsx-2353767445\",\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, \"colors: \", lodash__WEBPACK_IMPORTED_MODULE_6___default.a.map(val.color, function (color) {\n        return __jsx(\"span\", {\n          key: val.id + color,\n          className: \"jsx-2353767445\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 67\n          }\n        }, color, \" \");\n      }), \" \"))), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n        id: \"2353767445\",\n        __self: _this2\n      }, \".list-element.jsx-2353767445{cursor:pointer;}.list-element-active.jsx-2353767445{cursor:pointer;color:red;}.info.jsx-2353767445{display:none;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9hbGVrc2lvY29ubm9yL0RvY3VtZW50cy9wcm9qZWN0cy9yZWFrdG9yL3BhZ2VzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlKb0IsQUFHZ0MsQUFHQSxBQUlGLGFBQ2YsRUFQQSxBQUdZLFVBQ1oiLCJmaWxlIjoiL1VzZXJzL2FsZWtzaW9jb25ub3IvRG9jdW1lbnRzL3Byb2plY3RzL3JlYWt0b3IvcGFnZXMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSGVhZCBmcm9tICduZXh0L2hlYWQnXG5pbXBvcnQgdXNlU1dSIGZyb20gJ3N3cidcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCdcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcblxuY29uc3QgQWxwaGFiZXQgPSAocHJvcHMpID0+IHtcbiAgXG4gIGNvbnN0IGhhbmRlQ2xpY2sgPSAodmFsKSA9PiB7XG4gICAgcHJvcHMuc2V0TGV0dGVyKHZhbClcbiAgfVxuXG4gIGxldCBzZWxlY3RlZCA9IG51bGxcbiAgaWYgKCBwcm9wcy5jYXRlZ29yeSA9PSAnamFja2V0cycgKSBzZWxlY3RlZCA9IHByb3BzLmphY2tldHNcbiAgaWYgKCBwcm9wcy5jYXRlZ29yeSA9PSAnc2hpcnRzJyApIHNlbGVjdGVkID0gcHJvcHMuc2hpcnRzXG4gIGlmICggcHJvcHMuY2F0ZWdvcnkgPT0gJ2FjY2Vzc29yaWVzJyApIHNlbGVjdGVkID0gcHJvcHMuYWNjZXNzb3JpZXNcblxuICBpZih4KSB7XG4gICAgcmV0dXJuIChcbiAgICAgIF8ubWFwKE9iamVjdC5rZXlzKHgpLCAoY2hhcikgPT4ge1xuICAgICAgICByZXR1cm4gKCBcbiAgICAgICAgICA8bGkgY2xhc3NOYW1lPSdhbHBoYScga2V5PXtjaGFyfSBvbkNsaWNrPXsoKSA9PiBoYW5kZUNsaWNrKGNoYXIpfT4ge2NoYXJ9IFxuICAgICAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAuYWxwaGEge1xuICAgICAgICAgICAgICAgIGRpc3BsYXk6IGlubGluZTtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgIH1cbiAgXG4gICAgICAgICAgICBgfVxuICAgICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgICA8L2xpPlxuICAgICAgICApXG4gICAgICB9KVxuICAgIClcbiAgfVxuICBlbHNlIHJldHVybiBudWxsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEhvbWUoKSB7XG4gIGNvbnN0IFsgbGV0dGVyLCBzZXRMZXR0ZXIgXSA9IHVzZVN0YXRlKCdBJylcbiAgY29uc3QgWyBqYWNrZXRzLCBzZXRKYWNrZXRzIF0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbIHNoaXJ0cywgc2V0U2hpcnRzIF0gPSB1c2VTdGF0ZShudWxsKVxuICBjb25zdCBbIGFjY2Vzc29yaWVzLCBzZXRBY2Nlc3NvcmllcyBdID0gdXNlU3RhdGUobnVsbClcbiAgY29uc3QgWyBjYXRlZ29yeSwgc2V0Q2F0ZWdvcnkgXSA9IHVzZVN0YXRlKCdqYWNrZXRzJylcbiAgY29uc3QgWyBhY3RpdmVJZCwgc2V0QWN0aXZlSWQgXSA9IHVzZVN0YXRlKG51bGwpXG4gIGNvbnN0IFsgcGVuZGluZywgc2V0UGVuZGluZyBdID0gdXNlU3RhdGUoW10pXG4gIGNvbnN0IFsgbWFudWZhY3R1cmVycywgc2V0TWFudWZhY3R1cmVycyBdID0gdXNlU3RhdGUoe30pXG5cbiAgLy8gZnVuY3Rpb24gcGFzc2VkIG9uIHRvIHVzZVNXUlxuICBjb25zdCBmZXRjaGVyID0gKC4uLmFyZ3MpID0+IGZldGNoKC4uLmFyZ3MpLnRoZW4oKHJlcykgPT4ge1xuICAgIHJldHVybiByZXMuanNvbigpXG4gIH0pXG5cbiAgdXNlU1dSKCFqYWNrZXRzID8gJ2h0dHBzOi8vYmFkLWFwaS1hc3NpZ25tZW50LnJlYWt0b3IuY29tL3Byb2R1Y3RzL2phY2tldHMnIDogbnVsbCwgZmV0Y2hlciwgeyBvblN1Y2Nlc3M6IChkYXRhLCBrZXksIGNvbmZpZykgPT4ge1xuICAgIGRhdGFQYXJzZXIoZGF0YSwgc2V0SmFja2V0cylcbiAgfX0pXG5cbiAgdXNlU1dSKCFzaGlydHMgPyAnaHR0cHM6Ly9iYWQtYXBpLWFzc2lnbm1lbnQucmVha3Rvci5jb20vcHJvZHVjdHMvc2hpcnRzJyA6IG51bGwsIGZldGNoZXIsIHsgb25TdWNjZXNzOiAoZGF0YSwga2V5LCBjb25maWcpID0+IHtcbiAgICBkYXRhUGFyc2VyKGRhdGEsIHNldFNoaXJ0cylcbiAgfX0pXG5cbiAgdXNlU1dSKCFhY2Nlc3NvcmllcyA/ICdodHRwczovL2JhZC1hcGktYXNzaWdubWVudC5yZWFrdG9yLmNvbS9wcm9kdWN0cy9hY2Nlc3NvcmllcycgOiBudWxsLCBmZXRjaGVyLCB7IG9uU3VjY2VzczogKGRhdGEsIGtleSwgY29uZmlnKSA9PiB7XG4gICAgY29uc3QgdW5pcXVlTWFudWZhY3R1cmVycyA9IF8udW5pcShfLm1hcChkYXRhLCAnbWFudWZhY3R1cmVyJykpXG4gICAgc2V0UGVuZGluZyh1bmlxdWVNYW51ZmFjdHVyZXJzKVxuICAgIGRhdGFQYXJzZXIoZGF0YSwgc2V0QWNjZXNzb3JpZXMpXG4gIH19KVxuXG4vLyBnZXQgbWFudWZhY3R1cmVycyBvbmNlIGl0ZW1zIGFyZSByZXRyaWV2ZWRcbnVzZUVmZmVjdCgoKSA9PiB7XG4gIGdldE1hbnVmYWN0dXJlcnMocGVuZGluZylcbn0sIFtwZW5kaW5nXSlcblxuLy8gYXN5bmMgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgYXZhaWxhYmlsaXR5IGRhdGEgaW4gcGFyYWxsZWxcbiAgY29uc3QgZ2V0TWFudWZhY3R1cmVycyA9IGFzeW5jICh4KSA9PiB7XG4gICAgY29uc3QgbmV3T2JqID0ge31cbiAgICBjb25zdCBwcm9taXNlcyA9IFtdXG4gICAgZm9yIChjb25zdCBtYW51ZmFjdHVyZXIgb2YgeCkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBmZXRjaChgaHR0cHM6Ly9iYWQtYXBpLWFzc2lnbm1lbnQucmVha3Rvci5jb20vYXZhaWxhYmlsaXR5LyR7bWFudWZhY3R1cmVyfWApXG4gICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcbiAgICAgIHByb21pc2VzLnB1c2goe3Jlc3BvbnNlLCBtYW51ZmFjdHVyZXJ9KVxuICAgIH1cbiAgICBQcm9taXNlLmFsbChwcm9taXNlcylcbiAgICAgIC50aGVuKCBhc3luYyAoKSA9PiB7XG4gICAgICAgIGZvciAoY29uc3QgcHJvbWlzZSBvZiBwcm9taXNlcykge1xuICAgICAgICAgIGF3YWl0IHByb21pc2UucmVzcG9uc2UudGhlbihkYXRhID0+IHtcbiAgICAgICAgICAgIG5ld09ialtwcm9taXNlLm1hbnVmYWN0dXJlcl0gPSBkYXRhTWFwKGRhdGEucmVzcG9uc2UpXG4gICAgICAgICAgfSlcbiAgICAgICAgfVxuICAgICAgICBzZXRNYW51ZmFjdHVyZXJzKG5ld09iailcbiAgICAgIH0pXG59XG5cbi8vIHBhcnNlIGRhdGFwYXlsb2FkIHZhbHVlXG4gIGNvbnN0IHBhcnNlRGF0YXBheWxvYWQgPSAoc3RyaW5nKSA9PiB7XG4gICAgaWYgKHN0cmluZykgcmV0dXJuIHN0cmluZy5yZXBsYWNlKC88XFwvP1tePl0rKD58JCkvZywgXCJcIilcbiAgICBlbHNlIHJldHVybiBcImluZm9ybWF0aW9uIG5vdCBhdmFpbGFibGVcIlxuICB9XG5cbiAgLy8gbWFwcyBkYXRhIGludG8ga2V5IHZhbHVlIHBhaXJzXG4gIGNvbnN0IGRhdGFNYXAgPSAoZGF0YSkgPT4ge1xuICAgIGNvbnN0IG5ld09iaiA9IHt9XG4gICAgXy5mb3JFYWNoKGRhdGEsICh2YWwpID0+IHtcbiAgICAgIG5ld09ialt2YWwuaWRdID0gcGFyc2VEYXRhcGF5bG9hZCh2YWwuREFUQVBBWUxPQUQpXG4gICAgfSlcbiAgICByZXR1cm4gbmV3T2JqXG4gIH1cblxuICBcbiAgLy8gc29ydHMgdGhlIGl0ZW1zIGludG8gYW4gYXJyYXkgb2Ygc3ViYXJyYXlzIHNvcnRlZCBhbHBoYWJldGljYWxseVxuICBjb25zdCBkYXRhUGFyc2VyID0gKGRhdGEsIHNldHRlcikgPT4ge1xuICAgIGNvbnN0IHNvcnRlZERhdGEgPSBfLm9yZGVyQnkoZGF0YSwgWyduYW1lJ10sIFsnYXNjJ10pXG4gICAgY29uc3QgYWxwaGFiZXRpY2FsU29ydCA9IHNvcnRlZERhdGEucmVkdWNlKChyLCBlICkgPT4ge1xuICAgICAgbGV0IGdyb3VwID0gZS5uYW1lWzBdXG4gICAgICBpZighcltncm91cF0pIHJbZ3JvdXBdID0ge2dyb3VwLCBjaGlsZHJlbjogW2VdfVxuICAgICAgZWxzZSByW2dyb3VwXS5jaGlsZHJlbi5wdXNoKGUpO1xuICAgICAgcmV0dXJuIHI7XG4gICAgfSwge30pXG4gICAgc2V0dGVyKGFscGhhYmV0aWNhbFNvcnQpXG4gIH1cbiAgXG5cblxuICBjb25zdCBGaWx0ZXJDYXRlZ29yeSA9IChwcm9wcykgPT4ge1xuICAgIGNvbnN0IGhhbmRlQ2xpY2sgPSAodmFsKSA9PiB7XG4gICAgICBzZXRDYXRlZ29yeSh2YWwpXG4gICAgfVxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGhhbmRlQ2xpY2soJ2phY2tldHMnKX0+amFja2V0czwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IGhhbmRlQ2xpY2soJ3NoaXJ0cycpfT5zaGlydHM8L2J1dHRvbj5cbiAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXsoKSA9PiBoYW5kZUNsaWNrKCdhY2Nlc3NvcmllcycpfT5hY2Nlc3NvcmllczwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG5cblxuICBjb25zdCBsaXN0T2ZQcm9kdWN0cyA9IChkYXRhKSA9PiB7XG4gICAgY29uc3QgbGlzdCA9IF8ubWFwKGRhdGFbbGV0dGVyXS5jaGlsZHJlbiwgKHZhbCkgPT4ge1xuICAgICAgY29uc3QgaGFuZGxlQ2xpY2sgPSAodmFsKSA9PiB7XG4gICAgICAgIGFjdGl2ZUlkID09IHZhbC5pZCA/IHNldEFjdGl2ZUlkKG51bGwpIDogc2V0QWN0aXZlSWQodmFsLmlkKVxuICAgICAgfVxuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGxpIGNsYXNzTmFtZT17YWN0aXZlSWQ9PXZhbC5pZCA/ICdsaXN0LWVsZW1lbnQtYWN0aXZlJyA6ICdsaXN0LWVsZW1lbnQnfSBrZXk9e3ZhbC5pZH0gb25DbGljaz17ICgpPT5oYW5kbGVDbGljayh2YWwpIH0+e3ZhbC5uYW1lfVxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT17YWN0aXZlSWQ9PXZhbC5pZCA/ICdpbmZvLWFjdGl2ZScgOiAnaW5mbyd9PlxuICAgICAgICAgIDx1bD5cbiAgICAgICAgICA8bGkga2V5PXt2YWwuaWQgKyAxfT4gaWQ6IHt2YWwuaWR9PC9saT5cbiAgICAgICAgICA8bGkga2V5PXt2YWwuaWQgKyAyfT4gdHlwZToge3ZhbC50eXBlfTwvbGk+XG4gICAgICAgICAgPGxpIGtleT17dmFsLmlkICsgM30+cHJpY2U6IHt2YWwucHJpY2V9PC9saT5cbiAgICAgICAgICA8bGkga2V5PXt2YWwuaWQgKyA0fT5tYW51ZmFjdHVyZXI6IHt2YWwubWFudWZhY3R1cmVyfTwvbGk+XG4gICAgICAgICAgPGxpIGtleT17dmFsLmlkICsgNX0+YXZhaWxhYmlsaXR5OiB7IShtYW51ZmFjdHVyZXJzW3ZhbC5tYW51ZmFjdHVyZXJdKSA/ICdsb2FkaW5nJyA6IG1hbnVmYWN0dXJlcnNbdmFsLm1hbnVmYWN0dXJlcl1bdmFsLmlkLnRvVXBwZXJDYXNlKCldfTwvbGk+XG4gICAgICAgICAgPGxpIGtleT17dmFsLmlkICsgNn0+Y29sb3JzOiB7Xy5tYXAodmFsLmNvbG9yLCBjb2xvciA9PiA8c3BhbiBrZXk9e3ZhbC5pZCArIGNvbG9yfT57Y29sb3J9IDwvc3Bhbj4pIH0gPC9saT5cbiAgICAgICAgICA8L3VsPlxuIFxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAgICAgICAubGlzdC1lbGVtZW50IHtcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgLmxpc3QtZWxlbWVudC1hY3RpdmUge1xuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICAgICAgICAgICAgICBjb2xvcjogcmVkO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC5pbmZvIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBub25lO1xuICAgICAgICAgICAgICB9XG4gIFxuICAgICAgICAgICAgYH1cbiAgICAgICAgICA8L3N0eWxlPlxuICAgICAgICA8L2xpPlxuICAgICAgKVxuICAgIH0pXG4gICAgcmV0dXJuIChcbiAgICAgIDx1bD5cbiAgICAgICAge2xpc3R9XG4gICAgICA8L3VsPlxuICAgIClcbiAgfVxuXG5cbiAgY29uc3QgUmVuZGVyZWQgPSAoKSA9PiB7XG4gICAgbGV0IHggPSBudWxsXG4gICAgaWYgKCBjYXRlZ29yeSA9PSAnamFja2V0cycgKSB4ID0gamFja2V0c1xuICAgIGlmICggY2F0ZWdvcnkgPT0gJ3NoaXJ0cycgKSB4ID0gc2hpcnRzXG4gICAgaWYgKCBjYXRlZ29yeSA9PSAnYWNjZXNzb3JpZXMnICkgeCA9IGFjY2Vzc29yaWVzXG5cbiAgICBpZiAoIXgpIHJldHVybiA8ZGl2PmxvYWRpbmc8L2Rpdj5cbiAgICByZXR1cm4gPGRpdj57bGlzdE9mUHJvZHVjdHMoeCl9PC9kaXY+XG4gIH1cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyXCI+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPkNyZWF0ZSBOZXh0IEFwcDwvdGl0bGU+XG4gICAgICAgIDxsaW5rIHJlbD1cImljb25cIiBocmVmPVwiL2Zhdmljb24uaWNvXCIgLz5cbiAgICAgIDwvSGVhZD5cblxuXG4gICAgICA8bWFpbj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICBjdXJyZW50IGxldHRlcjoge2xldHRlcn1cbiAgICAgICAgICA8dWwgY2xhc3NOYW1lPSdhbHBoYWJldCc+XG4gICAgICAgICAgPEFscGhhYmV0IGNhdGVnb3J5PXtjYXRlZ29yeX0gamFja2V0cz17amFja2V0c30gc2hpcnRzPXtzaGlydHN9IGFjY2Vzc29yaWVzPXthY2Nlc3Nvcmllc30gLz5cbiAgICAgICAgICA8L3VsPlxuICAgICAgICA8RmlsdGVyQ2F0ZWdvcnkgLz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8UmVuZGVyZWQgLz5cbiAgICAgIDwvbWFpbj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuY29udGFpbmVyIHtcbiAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcbiAgICAgICAgICBwYWRkaW5nOiAwIDAuNXJlbTtcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuXG4gICAgICAgIG1haW4ge1xuICAgICAgICAgIHBhZGRpbmc6IDVyZW0gMDtcbiAgICAgICAgICBmbGV4OiAxO1xuICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICBodG1sLFxuICAgICAgICBib2R5IHtcbiAgICAgICAgICBwYWRkaW5nOiAwO1xuICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBTZWdvZSBVSSwgUm9ib3RvLFxuICAgICAgICAgICAgT3h5Z2VuLCBVYnVudHUsIENhbnRhcmVsbCwgRmlyYSBTYW5zLCBEcm9pZCBTYW5zLCBIZWx2ZXRpY2EgTmV1ZSxcbiAgICAgICAgICAgIHNhbnMtc2VyaWY7XG4gICAgICAgIH1cblxuICAgICAgICAqIHtcbiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB9XG4gICAgICBgfTwvc3R5bGU+XG4gICAgPC9kaXY+XG4gIClcbn1cbiJdfQ== */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n    });\n\n    return __jsx(\"ul\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }\n    }, list);\n  };\n\n  var Rendered = function Rendered() {\n    var x = null;\n    if (category == 'jackets') x = jackets;\n    if (category == 'shirts') x = shirts;\n    if (category == 'accessories') x = accessories;\n    if (!x) return __jsx(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 20\n      }\n    }, \"loading\");\n    return __jsx(\"div\", {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 12\n      }\n    }, listOfProducts(x));\n  };\n\n  return __jsx(\"div\", {\n    className: \"jsx-1901389831\" + \" \" + \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 5\n    }\n  }, __jsx(next_head__WEBPACK_IMPORTED_MODULE_4___default.a, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, \"Create Next App\"), __jsx(\"link\", {\n    rel: \"icon\",\n    href: \"/favicon.ico\",\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  })), __jsx(\"main\", {\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, \"current letter: \", letter, __jsx(\"ul\", {\n    className: \"jsx-1901389831\" + \" \" + 'alphabet',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(Alphabet, {\n    category: category,\n    jackets: jackets,\n    shirts: shirts,\n    accessories: accessories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  })), __jsx(FilterCategory, {\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  })), __jsx(Rendered, {\n    className: \"jsx-1901389831\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }\n  })), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"2291615557\",\n    __self: this\n  }, \".container.jsx-1901389831{min-height:100vh;padding:0 0.5rem;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}main.jsx-1901389831{padding:5rem 0;-webkit-flex:1;-ms-flex:1;flex:1;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"), __jsx(styled_jsx_style__WEBPACK_IMPORTED_MODULE_2___default.a, {\n    id: \"3379920139\",\n    __self: this\n  }, \"html,body{padding:0;margin:0;font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto, Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue, sans-serif;}*{box-sizing:border-box;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\\n/*@ sourceURL=/Users/aleksioconnor/Documents/projects/reaktor/pages/index.js */\"));\n}\n\n_s(Home, \"EVXie4RlC8v31hFRPRnSa6nibxw=\", false, function () {\n  return [swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"], swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"], swr__WEBPACK_IMPORTED_MODULE_5__[\"default\"]];\n});\n\n_c2 = Home;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alphabet\");\n$RefreshReg$(_c2, \"Home\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n");

/***/ })

})